@page "/counter"
@using FlexBusiness_Lib;
@using System.Globalization;
@using Radzen.Blazor;

<Radzen.Blazor.RadzenTabs>
    <Tabs>

        <Radzen.Blazor.RadzenTabsItem Text="Comp Info">
            <Radzen.Blazor.RadzenCard Style="font-size: 11px;">
                <div style="width: 400px;">
                    <Radzen.Blazor.RadzenFieldset>
                        <div>
                            <Radzen.Blazor.RadzenHtml>@summary</Radzen.Blazor.RadzenHtml>
                            <Radzen.Blazor.RadzenHtml>@selectedregions</Radzen.Blazor.RadzenHtml>
                        </div>
                    </Radzen.Blazor.RadzenFieldset>
                    <RadzenFieldset Text="Employee Inputs">
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel class="labelflexblazor" Text="Name or Initials:" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox class="textflexblazor" Name="rtbName" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel class="labelflexblazor" Text="Annual Salary:" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox class="textflexblazor" Name="rtbAnSalary" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel class="labelflexblazor" Text="Annual OTC:" />
                            </div>
                            <div class="col-md-8">
                                <RadzenTextBox class="textflexblazor" Name="rtbAnOTC" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel class="labelflexblazor" Text="Select Region/s:" />
                            </div>
                            <div class="col-md-8">
                                <RadzenCheckBoxList TValue="string" Orientation="Radzen.Orientation.Vertical" @bind-Value="selectedregions" Change="@((args) => ShowSummary(args, "CheckBoxList with horizontal orientation"))">
                                    <Items>
                                        @foreach (string r in regions)
                                        {
                                            <Radzen.Blazor.RadzenCheckBoxListItem Value="@r" Text="@r" />
                                        }
                                    </Items>
                                </RadzenCheckBoxList>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 align-items-center d-flex">
                                <RadzenLabel class="labelflexblazor" Text="Select Month/s:" />
                            </div>
                            <div class="col-md-8">
                                <RadzenCheckBoxList TValue="string" Orientation="Radzen.Orientation.Vertical">
                                    <Items>
                                        @foreach (string m in months)
                                        {
                                            <Radzen.Blazor.RadzenCheckBoxListItem Value="@m" Text="@m" />
                                        }
                                    </Items>
                                </RadzenCheckBoxList>
                            </div>
                        </div>
                    </RadzenFieldset>
                </div>
            </Radzen.Blazor.RadzenCard>
        </Radzen.Blazor.RadzenTabsItem>
        <Radzen.Blazor.RadzenTabsItem Text="Region Select">

            <Radzen.Blazor.RadzenCard Style="font-size: 11px;">
                <h1>Flex Goals</h1>

                <h3>Number of RegionMonths: @rlist.Count()</h3>



                <h2>Select a Region</h2>
                <select id="ddlRegions" @onchange="@ShowTable" style="width: 200px; font-size: 12px; padding: 3px;">
                    <option></option>
                    @foreach (string s in regions)
                    {
                        <option value="@s">@s</option>
                    }

                </select>
                <br /><br />
                <h4>Region: <span style="text-transform: uppercase; color: purple;">@reg</span></h4>

                <div style="width:400px;">
                    <table class="table tblSmall">

                        <tbody>
                            <tr>
                                <th>MONTH</th>
                                <th>GOAL $</th>
                                <th>ACTUAL $</th>
                                <th>ATTAIN %</th>
                            </tr>
                            @foreach (FlexBL.RegionMonth rm in rlist)
                            {
                                <tr>
                                    <td>@rm.MonthName</td>
                                    <td>@GetCurrencyString(rm.MonthlyGoal)</td>
                                    <td>@GetCurrencyString(rm.MonthlyActual)</td>
                                    <td>@rm.MonthlyAttainment.ToString("P")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </Radzen.Blazor.RadzenCard>
        </Radzen.Blazor.RadzenTabsItem>
        <Radzen.Blazor.RadzenTabsItem Text="Month Select"></Radzen.Blazor.RadzenTabsItem>
        <Radzen.Blazor.RadzenTabsItem Text="All"></Radzen.Blazor.RadzenTabsItem>
    </Tabs>
</Radzen.Blazor.RadzenTabs>






@functions {
    List<string> regions = FlexBL.RegionMonth.RegionMonthHelper.AllRegions();
    List<string> months = FlexBL.RegionMonth.RegionMonthHelper.AllMonths();

    string reg = "Southwest";
    List<FlexBL.RegionMonth> rlist = FlexBL.RegionMonth.RegionMonthHelper.GetRegionMonthsByRegion("Southwest");

    string summary;
    IEnumerable<string> selectedregions;

    void ShowSummary(IEnumerable<string> value, string name)
    {
        summary = "";
        foreach (string v in value)
        {
            summary += v + ", ";
        }
        
    }

    void ShowTable(ChangeEventArgs e)
    {
        if (e.Value.ToString() != "")
        {
            reg = e.Value.ToString();
            rlist = FlexBL.RegionMonth.RegionMonthHelper.GetRegionMonthsByRegion(reg);
        }
    }

    public static string GetCurrencyString(double input)
    {
        var curr = new CultureInfo("en-US");
        return input.ToString("C", curr);
    }

}


@code {
    void Change()
    {
        

    }





}


<p>---</p>

<p>Current count: @currentCount</p>

<RadzenButton Click="@IncrementCount" Icon="account_circle" Style="margin-bottom: 20px; width: 80px" />
<RadzenIcon Icon="alarm" />
<RadzenIcon Icon="alarm_add" />
<RadzenIcon Icon="alarm_off" />
<RadzenIcon Icon="alarm_on" />
<RadzenIcon Icon="all_out" />

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
